{"ast":null,"code":"var _jsxFileName = \"/Users/shivangdave/Documents/Work/40-jwt-auth/bookapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport BookContainer from './Components/BookContainer';\nimport BookForm from './Components/BookForm';\nimport Login from './Components/Login';\nimport { BrowserRouter as Router, Route, Redirect, Link, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      isLoggedIn: false\n    };\n\n    this.handleClick = e => {\n      this.setState({\n        mountIt: !this.state.mountIt\n      });\n    };\n\n    this.handleRemoveClick = e => {\n      const bookid = e.target.dataset.id;\n      const newBooks = [...this.state.books].filter(book => parseInt(bookid) !== book.id);\n      this.setState({\n        books: newBooks\n      });\n    };\n\n    this.handleAppSubmit = newBook => {\n      fetch('http://localhost:3000/books', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newBook)\n      }).then(res => res.json()).then(book => {\n        const newBooks = [...this.state.books, book];\n        this.setState({\n          books: newBooks,\n          author: '',\n          title: '',\n          img: ''\n        });\n      });\n    };\n\n    this.handleLogin = (e, params) => {\n      fetch('http://localhost:3000/authors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          author: params\n        })\n      }).then(res => res.json()).then(data => {\n        localStorage.setItem('auth_token', data.token);\n        this.setState({\n          isLoggedIn: true\n        });\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        isLoggedIn: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/books').then(res => res.json()).then(data => {\n      let logged_in = localStorage.getItem('auth_token') !== null ? true : false;\n      this.setState({\n        books: data.books,\n        isLoggedIn: logged_in\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"parent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Header, {\n      isLoggedIn: this.state.isLoggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(BookContainer, {\n      books: this.state.books,\n      handleRemoveClick: this.handleRemoveClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/newbook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(BookForm, {\n      handleAppSubmit: this.handleAppSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      handleLogin: this.handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Route, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shivangdave/Documents/Work/40-jwt-auth/bookapp/src/App.js"],"names":["React","Component","Header","BookContainer","BookForm","Login","BrowserRouter","Router","Route","Redirect","Link","Switch","App","state","books","isLoggedIn","handleClick","e","setState","mountIt","handleRemoveClick","bookid","target","dataset","id","newBooks","filter","book","parseInt","handleAppSubmit","newBook","fetch","method","headers","body","JSON","stringify","then","res","json","author","title","img","handleLogin","params","data","localStorage","setItem","token","logout","clear","componentDidMount","logged_in","getItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport BookContainer from './Components/BookContainer'\nimport BookForm from './Components/BookForm'\n\nimport Login from './Components/Login'\n\nimport { BrowserRouter as Router, Route, Redirect, Link, Switch } from 'react-router-dom';\n\nclass App extends Component {\n\n  state = {\n    books: [],\n    isLoggedIn: false\n  }\n\n  componentDidMount(){\n\n    fetch('http://localhost:3000/books')\n    .then(res => res.json())\n    .then(data => {\n\n      let logged_in = localStorage.getItem('auth_token') !== null ? true : false\n\n      this.setState({ books: data.books, isLoggedIn: logged_in })\n    })\n  }\n\n\n  handleClick = (e) => {\n    this.setState({ mountIt: !this.state.mountIt })\n  }\n\n  handleRemoveClick = (e) => {\n    const bookid = e.target.dataset.id\n    const newBooks = [...this.state.books].filter(book => parseInt(bookid) !== book.id )\n\n    this.setState({ books: newBooks })\n  }\n\n  handleAppSubmit = (newBook) => {\n    fetch('http://localhost:3000/books',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newBook)\n    })\n    .then(res => res.json())\n    .then(book => {\n      const newBooks = [...this.state.books, book]\n      this.setState({ books: newBooks, author: '', title: '', img: '' })\n    })\n  }\n\n  handleLogin = (e,params) => {\n    fetch('http://localhost:3000/authors',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ author: params})\n    })\n    .then(res => res.json())\n    .then(data => {\n      localStorage.setItem('auth_token',data.token)\n      this.setState({ isLoggedIn: true })\n    })\n  }\n\n  logout = () => {\n    localStorage.clear()\n    this.setState({ isLoggedIn: false})\n  }\n\n  render(){\n    return (\n      <div className=\"parent\">\n\n\n        <Router>\n\n        <Header isLoggedIn={this.state.isLoggedIn} />\n          <Switch>\n\n\n\n            <Route exact path='/'>\n              <BookContainer books={this.state.books} handleRemoveClick={this.handleRemoveClick}/>\n            </Route>\n\n            <Route path='/newbook'>\n            {\n              this.state.isLoggedIn\n              ? <BookForm handleAppSubmit={this.handleAppSubmit} />\n              : <Redirect to='/login' />\n            }\n            </Route>\n\n            <Route path='/login'>\n            {\n              this.state.isLoggedIn\n              ? <Redirect to='/' />\n              : <Login handleLogin={this.handleLogin} />\n            }\n            </Route>\n\n            <Route path='/logout'>\n              \n            </Route>\n\n            <Route>\n              <Redirect to='/' />\n            </Route>\n          </Switch>\n\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}